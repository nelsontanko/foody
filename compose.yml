version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: foody-app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - 'SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/foody'
      - 'SPRING_DATASOURCE_USERNAME=postgres'
      - 'SPRING_DATASOURCE_PASSWORD=secret'
    ports:
      - "8080:8080"
    networks:
      - foody-postgres-net
    restart: unless-stopped

  postgres:
    image: 'postgres:16-alpine'
    container_name: foody-db
    environment:
      - 'POSTGRES_DB=foody'
      - 'POSTGRES_PASSWORD=secret'
      - 'POSTGRES_USER=postgres'
      - 'PGDATA=/var/lib/postgresql/data/pgdata'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - foody-postgres-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  redis:
    container_name: foody-redis
    image: 'redis:7.4'
    restart: unless-stopped
    networks:
      - foody-postgres-net
  mailpit:
    image: axllent/mailpit:v1.23
    container_name: foody-mailpit
    ports:
      - "1025:1025" # SMTP server port
      - "8025:8025" # Web UI port
    environment:
      - MP_SMTP_AUTH_ACCEPT_ANY=1
      - MP_SMTP_AUTH_ALLOW_INSECURE=1
    networks:
      - foody-postgres-net

networks:
  foody-postgres-net:
    driver: bridge

volumes:
  postgres-data:
    driver: local
